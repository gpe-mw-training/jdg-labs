<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-bom</artifactId>
      <version>6.3.0.ER3-redhat-1</version>
      <relativePath>../bom/pom.xml</relativePath>
   </parent>
   <artifactId>infinispan-parent</artifactId>
   <packaging>pom</packaging>
   <name>Infinispan Common Parent</name>
   <description>Infinispan common parent POM module</description>
   <url>http://www.infinispan.org</url>
   <organization>
      <name>JBoss, a division of Red Hat</name>
      <url>http://www.jboss.org</url>
   </organization>
   <licenses>
      <license>
         <name>Apache License</name>
         <url>http://www.apache.org/licenses/LICENSE-2.0</url>
         <distribution>repo</distribution>
      </license>
   </licenses>
   <developers>
      <developer>
         <id>placeholder</id>
         <name>See http://www.infinispan.org for a complete list of contributors</name>
      </developer>
   </developers>
   <mailingLists>
      <mailingList>
         <name>Infinispan Issues</name>
         <subscribe>https://lists.jboss.org/mailman/listinfo/infinispan-issues</subscribe>
         <unsubscribe>https://lists.jboss.org/mailman/listinfo/infinispan-issues</unsubscribe>
         <post>infinispan-issues@lists.jboss.org</post>
         <archive>http://lists.jboss.org/pipermail/infinispan-issues/</archive>
      </mailingList>
      <mailingList>
         <name>Infinispan Developers</name>
         <subscribe>https://lists.jboss.org/mailman/listinfo/infinispan-dev</subscribe>
         <unsubscribe>https://lists.jboss.org/mailman/listinfo/infinispan-dev</unsubscribe>
         <post>infinispan-dev@lists.jboss.org</post>
         <archive>http://lists.jboss.org/pipermail/infinispan-dev/</archive>
      </mailingList>
   </mailingLists>
   <scm>
      <connection>scm:git:git@github.com:infinispan/infinispan.git</connection>
      <developerConnection>scm:git:git@github.com:infinispan/infinispan.git</developerConnection>
      <url>https://github.com/infinispan/infinispan</url>
   </scm>
   <issueManagement>
      <system>jira</system>
      <url>https://issues.jboss.org/browse/ISPN</url>
   </issueManagement>
   <ciManagement>
      <system>TeamCity</system>
      <url>http://ci.infinispan.org</url>
      <notifiers>
         <notifier>
            <type>mail</type>
            <address>infinispan-commits@lists.jboss.org</address>
         </notifier>
      </notifiers>
   </ciManagement>
   <distributionManagement>
      <repository>
         <id>jboss-releases-repository</id>
         <name>JBoss Release Repository</name>
         <url>${jboss.releases.repo.url}</url>
      </repository>
      <snapshotRepository>
         <id>jboss-snapshots-repository</id>
         <name>JBoss Snapshot Repository</name>
         <url>${jboss.snapshots.repo.url}</url>
      </snapshotRepository>
   </distributionManagement>
   <properties>
      <buildDirectory>target</buildDirectory>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      <maven.compiler.target>1.6</maven.compiler.target>
      <maven.compiler.source>1.6</maven.compiler.source>
      <defaultTestGroup>functional,unit,arquillian</defaultTestGroup>
      <!-- unstable and stress because we can have them inside a functional class, for example -->
      <defaultExcludedTestGroup>unstable,stress,unstable_xsite</defaultExcludedTestGroup>
      <forkJvmArgs>-Xmx1024m -XX:MaxPermSize=256m</forkJvmArgs>
      <testNGListener>org.infinispan.test.fwk.UnitTestTestNGListener</testNGListener>
      <infinispan.test.parallel.threads>15</infinispan.test.parallel.threads>
      <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
      <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
      <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
      <packaging>jar</packaging>
      <module.skipComponentMetaDataProcessing>true</module.skipComponentMetaDataProcessing>
      <module.skipTestComponentMetaDataProcessing>true</module.skipTestComponentMetaDataProcessing>
      <module.metadata.isCoreModule>false</module.metadata.isCoreModule>
      <!-- Versions for dependencies -->
      <version.apache.ds>2.0.0-M16</version.apache.ds>
      <version.arquillian>1.0.3.Final</version.arquillian>
      <version.arquillian.container.managed>7.5.0.Final-redhat-21</version.arquillian.container.managed>
      <version.arquillian.container.weld>1.0.0.CR3</version.arquillian.container.weld>
      <version.aspectj.aspectjweaver>1.8.1</version.aspectj.aspectjweaver>
      <version.byteman>2.1.4.1</version.byteman>
      <version.c3p0_dep.mchange-commons-java>0.2.7</version.c3p0_dep.mchange-commons-java>
      <version.ch.qos.cal10n>0.7.7.redhat-1</version.ch.qos.cal10n>
      <version.commons.codec>1.4.0.redhat-4</version.commons.codec>
      <version.commons.collections>3.2.1.redhat-3</version.commons.collections>
      <version.commons.dbcp>1.4-redhat-2</version.commons.dbcp>
      <version.commons.compress>1.5</version.commons.compress>
      <version.commons.httpclient>3.1-redhat-2</version.commons.httpclient>
      <version.commons.logging>1.1.1-redhat-2</version.commons.logging>
      <version.commons.math>2.2</version.commons.math>
      <version.freemarker>2.3.19-redhat-1</version.freemarker>
      <version.guava>13.0.1.redhat-2</version.guava>
      <version.geronimo.tm>3.1.1</version.geronimo.tm>
      <version.h2.driver>1.4.180.redhat-3</version.h2.driver>
      <version.hibernate.core>4.2.18.Final-redhat-1</version.hibernate.core>
      <version.hibernate.entitymanager>${version.hibernate.core}</version.hibernate.entitymanager>
      <version.hibernate.hql.parser>1.0.0.CR2-redhat-1</version.hibernate.hql.parser>
      <version.hibernate.javax.persistence>1.0.1.Final-redhat-2</version.hibernate.javax.persistence>
      <version.httpclient>4.3.6.redhat-1</version.httpclient>
      <version.howl>1.0.1-1</version.howl>
      <version.jackson>1.9.9.redhat-4</version.jackson>
      <version.javax.cache.cache-tests>1.0.0</version.javax.cache.cache-tests>
      <version.javassist>3.18.1-GA-redhat-1</version.javassist>
      <version.javax.enterprise>1.0-SP4-redhat-4</version.javax.enterprise>
      <version.jboss.as>7.5.0.Final-redhat-21</version.jboss.as>
      <version.jboss.ejb-client>1.0.30.Final-redhat-1</version.jboss.ejb-client>
      <version.jboss.logging.jboss-logging-processor>1.1.0.Final-redhat-1</version.jboss.logging.jboss-logging-processor>
      <version.jboss.logmanager>1.5.4.Final-redhat-1</version.jboss.logmanager>
      <version.jboss.remoting3>3.3.4.Final-redhat-1</version.jboss.remoting3>
      <version.jboss.remotingjmx>1.1.3.Final-redhat-2</version.jboss.remotingjmx>
      <version.jboss.sasl>1.0.5.Final-redhat-1</version.jboss.sasl>
      <version.jboss.spec>3.0.2.Final-redhat-15</version.jboss.spec>
      <version.org.jboss.spec.javax.resource.jboss-connector-api_1.6_spec>1.0.1.Final-redhat-3</version.org.jboss.spec.javax.resource.jboss-connector-api_1.6_spec>
      <version.org.jboss.spec.javax.servlet.jboss-servlet-api_3.0_spec>1.0.2.Final-redhat-1</version.org.jboss.spec.javax.servlet.jboss-servlet-api_3.0_spec>
      <version.org.jboss.naming>5.0.5.Final-redhat-1</version.org.jboss.naming>
      <version.org.jboss.jbossts.jbossjts>4.17.29.Final-redhat-1</version.org.jboss.jbossts.jbossjts>
      <version.jcipannotations>1.0.0.redhat-7</version.jcipannotations>
      <version.jetty>6.1.25</version.jetty>
      <version.junit>4.11</version.junit>
      <version.leveldb>0.6</version.leveldb>
      <version.log4j>1.2.16-redhat-2</version.log4j>
      <version.lucene.v3>3.6.2.redhat-8</version.lucene.v3>
      <version.mc4j>1.2.15.1</version.mc4j>
      <version.mockito>1.9.5</version.mockito>
      <version.mockito_dep.objenesis>1.4</version.mockito_dep.objenesis>
      <version.resteasy>2.3.10.Final-redhat-1</version.resteasy>
      <version.org.picketbox>4.1.1.Final-redhat-1</version.org.picketbox>
      <version.shrinkwrapResolver>2.0.0</version.shrinkwrapResolver>
      <version.slf4j>1.7.5</version.slf4j>
      <version.spymemcached>2.8.0</version.spymemcached>
      <version.stringtemplate>3.2.1-redhat-1</version.stringtemplate>
      <version.spring3>3.2.9.RELEASE</version.spring3>
      <version.spring4>4.1.0.RELEASE</version.spring4>
      <version.testng>6.8</version.testng>
      <version.weld>1.1.28.Final-redhat-1</version.weld>
      <version.xnio>3.0.13.GA-redhat-1</version.xnio>
      <version.antlr.maven.plugin>3.4</version.antlr.maven.plugin>
      <version.exec.maven.plugin>1.2.1</version.exec.maven.plugin>
      <version.maven.animal.sniffer>1.12</version.maven.animal.sniffer>
      <version.maven.antrun.plugin>1.7</version.maven.antrun.plugin>
      <version.wildfly.maven.plugin>1.1.0.Alpha1</version.wildfly.maven.plugin>
      <version.maven.buildhelper>1.8</version.maven.buildhelper>
      <version.maven.bundle>2.4.0</version.maven.bundle>
      <version.maven.dependency.plugin>2.8</version.maven.dependency.plugin>
      <version.maven.genjavadoc>0.5</version.maven.genjavadoc>
      <version.maven.invoker.plugin>1.5</version.maven.invoker.plugin>
      <version.maven.scala>2.15.2-redhat-1</version.maven.scala>
      <version.maven.surefire>2.14.1</version.maven.surefire>
      <version.maven.invoker>1.8</version.maven.invoker>
      <version.jacoco>0.5.10.201208310627</version.jacoco>
      <version.asm>3.3.1.redhat-9</version.asm>
      <version.pax.url>1.3.7</version.pax.url>
      <version.karaf>2.3.3</version.karaf>
      <version.pax.exam>4.1.0.redhat-1</version.pax.exam>
      <reportTitle>Infinispan JaCoCo Report</reportTitle>
      <dir.ispn>../</dir.ispn>
      <dir.report>../jacoco-html</dir.report>
      <m2e.apt.activation>jdt_apt</m2e.apt.activation>
      <!-- The version mask restricts the version for all imports to the exact version used in maven. -->
      <bnd.consumer.policy>$&lt;range;[====,====]&gt;</bnd.consumer.policy>
      <bnd.provider.policy>$&lt;range;[====,====]&gt;</bnd.provider.policy>
   </properties>
   
   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-cachestore-jdbc</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-lucene-directory</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-memcached</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-rest</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
         </dependency>
         <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${version.h2.driver}</version>
         </dependency>
         <dependency>
            <groupId>ch.qos.cal10n</groupId>
            <artifactId>cal10n-api</artifactId>
            <version>${version.ch.qos.cal10n}</version>
         </dependency>
         <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${version.commons.dbcp}</version>
         </dependency>
         <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${version.commons.httpclient}</version>
         </dependency>
         <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${version.commons.logging}</version>
         </dependency>
         <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${version.javassist}</version>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-tests</artifactId>
            <version>${version.javax.cache.cache-tests}</version>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-tests</artifactId>
            <version>${version.javax.cache.cache-tests}</version>
            <classifier>tests</classifier>
         </dependency>
         <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cdi-weld-annotations-test-harness</artifactId>
            <version>${version.javax.cache.cache-tests}</version>
         </dependency>
         <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${version.javax.enterprise}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.jboss.interceptor</groupId>
                  <artifactId>jboss-interceptor-api</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>javax.annotation</groupId>
                  <artifactId>jsr250-api</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
         </dependency>
         <dependency>
            <groupId>mc4j</groupId>
            <artifactId>org-mc4j-ems</artifactId>
            <version>${version.mc4j}</version>
         </dependency>
         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
         </dependency>
         <dependency>
            <groupId>net.sf.webdav-servlet</groupId>
            <artifactId>webdav-servlet</artifactId>
            <version>${version.webdav.servlet}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${version.commons.compress}</version>
         </dependency>
         <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${version.aspectj.aspectjweaver}</version>
         </dependency>
         <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${version.commons.codec}</version>
         </dependency>
         <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${version.commons.collections}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math</artifactId>
            <version>${version.commons.math}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${version.jackson}</version>
         </dependency>
         <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${version.jackson}</version>
         </dependency>
         <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${version.freemarker}</version>
         </dependency>
         <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${version.guava}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>${version.hibernate.annotations}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${version.hibernate.core}</version>
         </dependency>
         <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${version.hibernate.entitymanager}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.hibernate.hql</groupId>
            <artifactId>hibernate-hql-parser</artifactId>
            <version>${version.hibernate.hql.parser}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.jboss.logging</groupId>
                  <artifactId>jboss-logging</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.hibernate.hql</groupId>
            <artifactId>hibernate-hql-lucene</artifactId>
            <version>${version.hibernate.hql.parser}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.apache.lucene</groupId>
                  <artifactId>lucene-core</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.jboss.logging</groupId>
                  <artifactId>jboss-logging</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.hibernate</groupId>
                  <artifactId>hibernate-search-engine</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.hibernate.javax.persistence</groupId>
                  <artifactId>hibernate-jpa-2.0-api</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>${version.hibernate.javax.persistence}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>${version.arquillian}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-arquillian-container-managed</artifactId>
            <version>${version.arquillian.container.managed}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-controller</artifactId>
            <version>${version.jboss.as}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
            <version>${version.arquillian.container.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.sasl</groupId>
            <artifactId>jboss-sasl</artifactId>
            <version>${version.jboss.sasl}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-bom</artifactId>
            <version>${version.shrinkwrapResolver}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <version>${version.shrinkwrapResolver}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>${version.jboss.spec}</version>
            <type>pom</type>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.spec.javax.resource</groupId>
            <artifactId>jboss-connector-api_1.6_spec</artifactId>
            <version>${version.org.jboss.spec.javax.resource.jboss-connector-api_1.6_spec}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
            <version>${version.org.jboss.spec.javax.servlet.jboss-servlet-api_3.0_spec}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnp-client</artifactId>
            <version>${version.org.jboss.naming}</version>
            <exclusions>
               <exclusion>
                  <artifactId>jboss-logging-spi</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
            <version>${version.jboss.ejb-client}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnpserver</artifactId>
            <version>${version.org.jboss.naming}</version>
            <exclusions>
               <exclusion>
                  <artifactId>jboss-logging-spi</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.jboss.logmanager</groupId>
            <artifactId>jboss-logmanager</artifactId>
            <version>${version.jboss.logmanager}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.remoting3</groupId>
            <artifactId>jboss-remoting</artifactId>
            <version>${version.jboss.remoting3}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.xnio</groupId>
                    <artifactId>xnio-api</artifactId>
                </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.jboss.remotingjmx</groupId>
            <artifactId>remoting-jmx</artifactId>
            <version>${version.jboss.remotingjmx}</version>
            <exclusions>
               <exclusion>
                  <groupId>org.jboss.logging</groupId>
                  <artifactId>jboss-logging-processor</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.jboss.logmanager</groupId>
                  <artifactId>jboss-logmanager</artifactId>
               </exclusion>
               <exclusion>
                    <groupId>org.jboss.xnio</groupId>
                    <artifactId>xnio-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.xnio</groupId>
                    <artifactId>xnio-nio</artifactId>
                </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-nio</artifactId>
            <version>${version.xnio}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${version.resteasy}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.solder</groupId>
            <artifactId>solder-impl</artifactId>
            <version>${version.solder}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core</artifactId>
            <version>${version.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se</artifactId>
            <version>${version.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>${version.weld}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.milyn</groupId>
            <artifactId>milyn-smooks-javabean</artifactId>
            <version>${version.milyn.smooks}</version>
         </dependency>
         <dependency>
            <groupId>org.milyn</groupId>
            <artifactId>milyn-smooks-csv</artifactId>
            <version>${version.milyn.smooks}</version>
         </dependency>
         <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-embedded</artifactId>
            <version>${version.jetty}</version>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${version.slf4j}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
             <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${version.slf4j}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${version.slf4j}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${version.testng}</version>
            <scope>test</scope>
            <exclusions>
              <exclusion>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
              </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>relaxngDatatype</groupId>
            <artifactId>relaxngDatatype</artifactId>
            <version>${version.relaxngDatatype}</version>
         </dependency>
         <dependency>
            <groupId>spy</groupId>
            <artifactId>spymemcached</artifactId>
            <version>${version.spymemcached}</version>
         </dependency>
         <dependency>
            <groupId>org.iq80.leveldb</groupId>
            <artifactId>leveldb</artifactId>
            <version>${version.leveldb}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${version.httpclient}</version>
         </dependency>
         <dependency>
            <groupId>org.jboss.jbossts.jta</groupId>
            <artifactId>narayana-jta</artifactId>
            <version>${version.org.jboss.jbossts.jbossjts}</version>
            <exclusions>
               <exclusion>
                  <artifactId>commons-httpclient</artifactId>
                  <groupId>commons-httpclient</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>ironjacamar-spec-api</artifactId>
                  <groupId>org.jboss.ironjacamar</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jbogging-spi</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logging</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logging-processor</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logging-generator</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jbossws-native-core</artifactId>
                  <groupId>org.jboss.ws.native</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>emma</artifactId>
                  <groupId>emma</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>emma_ant</artifactId>
                  <groupId>emma</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>hornetq-core</artifactId>
                  <groupId>org.hornetq</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>netty</artifactId>
                  <groupId>io.netty</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>wrapper</artifactId>
                  <groupId>tanukisoft</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jacorb</artifactId>
                  <groupId>jacorb</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jfreechart</artifactId>
                  <groupId>jfree</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-corba-ots-spi</artifactId>
                  <groupId>org.jboss.integration</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-server-manager</artifactId>
                  <groupId>org.jboss.jbossas</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-ejb-api_3.1_spec</artifactId>
                  <groupId>org.jboss.spec.javax.ejb</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jnp-client</artifactId>
                  <groupId>org.jboss.naming</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-servlet-api_3.0_spec</artifactId>
                  <groupId>org.jboss.spec.javax.servlet</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jbossws-common</artifactId>
                  <groupId>org.jboss.ws</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jcl-over-slf4j</artifactId>
                  <groupId>org.slf4j</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>stax-api</artifactId>
                  <groupId>stax</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>idl</artifactId>
                  <groupId>jacorb</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logging-tools</artifactId>
                  <groupId>org.jboss.logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-connector-api_1.5_spec</artifactId>
                  <groupId>org.jboss.spec.javax.resource</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-transaction-spi</artifactId>
                  <groupId>org.jboss.integration</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-remoting</artifactId>
                  <groupId>org.jboss.remoting</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>slf4j-api</artifactId>
                  <groupId>org.slf4j</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>dom4j</artifactId>
                  <groupId>dom4j</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>commons-codec</artifactId>
                  <groupId>commons-codec</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-logmanager</artifactId>
                  <groupId>org.jboss.logmanager</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>hibernate-jpa-2.0-api</artifactId>
                  <groupId>org.hibernate.javax.persistence</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>commons-logging</artifactId>
                  <groupId>commons-logging</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jcommon</artifactId>
                  <groupId>jfree</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                  <groupId>org.jboss.spec.javax.transaction</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>byteman</artifactId>
                  <groupId>org.jboss.byteman</groupId>
               </exclusion>
               <exclusion>
                  <artifactId>byteman-submit</artifactId>
                  <groupId>org.jboss.byteman</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-all</artifactId>
            <version>${version.apache.ds}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>jbosssx-bare</artifactId>
            <version>${version.org.picketbox}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.apache.karaf</groupId>
            <artifactId>apache-karaf</artifactId>
            <version>${version.karaf}</version>
            <type>zip</type>
            <scope>test</scope>
            <exclusions>
               <exclusion>
                  <groupId>org.ops4j.pax.logging</groupId>
                  <artifactId>pax-logging-api</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>org.ops4j.pax.logging</groupId>
                  <artifactId>pax-logging-service</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>org.apache.karaf.features.core</artifactId>
            <version>${version.karaf}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-container-karaf</artifactId>
            <version>${version.pax.exam}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam</artifactId>
            <version>${version.pax.exam}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-junit4</artifactId>
            <version>${version.pax.exam}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.ops4j.pax.exam</groupId>
            <artifactId>pax-exam-inject</artifactId>
            <version>${version.pax.exam}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>${version.snappy}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.geronimo.components</groupId>
            <artifactId>geronimo-transaction</artifactId>
            <version>${version.geronimo.tm}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.objectweb.howl</groupId>
            <artifactId>howl</artifactId>
            <version>${version.howl}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-aether</artifactId>
            <version>${version.pax.url}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-assembly</artifactId>
            <version>${version.pax.url}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-mvn</artifactId>
            <version>${version.pax.url}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.ops4j.pax.url</groupId>
            <artifactId>pax-url-wrap</artifactId>
            <version>${version.pax.url}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman</artifactId>
            <version>${version.byteman}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman-bmunit</artifactId>
            <version>${version.byteman}</version>
            <scope>test</scope>
         </dependency> 
      </dependencies>
   </dependencyManagement>
   <dependencies>
      
      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>net.jcip</groupId>
         <artifactId>jcip-annotations</artifactId>
         <version>${version.jcipannotations}</version>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-all</artifactId>
         <version>${version.mockito}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.jbossts.jta</groupId>
         <artifactId>narayana-jta</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging-processor</artifactId>
         <version>${version.jboss.logging.jboss-logging-processor}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <version>${version.slf4j}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jdk14</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <build>
      <directory>${buildDirectory}</directory>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.antlr</groupId>
               <artifactId>antlr3-maven-plugin</artifactId>
               <version>${version.antlr.maven.plugin}</version>
               <executions>
                 <execution>
                     <goals>
                         <goal>antlr</goal>
                     </goals>
                 </execution>
             </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>3.1</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-invoker-plugin</artifactId>
               <version>${version.maven.invoker.plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.apache.felix</groupId>
               <artifactId>maven-bundle-plugin</artifactId>
               <version>${version.maven.bundle}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-dependency-plugin</artifactId>
               <version>${version.maven.dependency.plugin}</version>
            </plugin>
            <plugin>
               <groupId>org.apache.servicemix.tooling</groupId>
               <artifactId>depends-maven-plugin</artifactId>
               <version>1.2</version>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-pmd-plugin</artifactId>
               
               <version>2.7.1</version>
               <configuration>
                  <minimumTokens>100</minimumTokens>
                  <targetJdk>1.6</targetJdk>
                  <linkXref>false</linkXref>
                  <sourceEncoding>utf-8</sourceEncoding>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>${version.maven.surefire}</version>
            </plugin>
            <plugin>
               <artifactId>maven-war-plugin</artifactId>
               <configuration>
                  <attachClasses>false</attachClasses>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>appassembler-maven-plugin</artifactId>
               <version>1.0</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>build-helper-maven-plugin</artifactId>
               <version>${version.maven.buildhelper}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>ideauidesigner-maven-plugin</artifactId>
               <version>1.0-beta-1</version>
            </plugin>
            
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <version>1.0.0</version>
               <configuration>
                  <lifecycleMappingMetadata>
                     <pluginExecutions>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-dependency-plugin</artifactId>
                              <versionRange>[2.0,)</versionRange>
                              <goals>
                                 <goal>copy</goal>
                                 <goal>unpack</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-javadoc-plugin</artifactId>
                              <versionRange>[2.8,)</versionRange>
                              <goals>
                                 <goal>javadoc</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-antrun-plugin</artifactId>
                              <versionRange>[1.7,)</versionRange>
                              <goals>
                                 <goal>run</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>exec-maven-plugin</artifactId>
                              <versionRange>[1.2.1,)</versionRange>
                              <goals>
                                 <goal>java</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.scala-tools</groupId>
                              <artifactId>maven-scala-plugin</artifactId>
                              <versionRange>[2.15.2,)</versionRange>
                              <goals>
                                 <goal>testCompile</goal>
                                 <goal>compile</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.codehaus.mojo</groupId>
                              <artifactId>ideauidesigner-maven-plugin</artifactId>
                              <versionRange>[1.0-beta-1,)</versionRange>
                              <goals>
                                 <goal>javac2</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                     </pluginExecutions>
                  </lifecycleMappingMetadata>
               </configuration>
            </plugin>
            <plugin>
               <groupId>org.jboss.maven.plugins</groupId>
               <artifactId>maven-injection-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.mortbay.jetty</groupId>
               <artifactId>jetty-maven-plugin</artifactId>
               <version>8.0.0.M3-redhat-1</version>
            </plugin>
            <plugin>
               <groupId>org.jacoco</groupId>
               <artifactId>jacoco-maven-plugin</artifactId>
               <version>${version.jacoco}</version>
               <configuration>
                  <includes>
                     <include>org.infinispan.*</include>
                  </includes>
               </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.10</version>
                <dependencies>
                   <dependency>
                      <groupId>org.infinispan</groupId>
                      <artifactId>infinispan-checkstyle</artifactId>
                      <version>${project.version}</version>
                   </dependency>
                </dependencies>
                <configuration>
                   <!-- Location is relative to the classpath -->
                   <configLocation>checkstyle.xml</configLocation>
                   <consoleOutput>true</consoleOutput>
                   <failsOnError>true</failsOnError>
                   <violationSeverity>error</violationSeverity>
                   <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
                <executions>
                   <execution>
                      <id>check-style</id>
                      <phase>verify</phase>
                      <goals>
                         <goal>checkstyle</goal>
                      </goals>
                   </execution>
                </executions>
             </plugin>
             <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
             </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
               <execution>
                  <id>enforce-java</id>
                  <goals>
                     <goal>enforce</goal>
                  </goals>
                  <configuration>
                     <rules>
                        <requireJavaVersion>
                           <version>[1.7,)</version>
                        </requireJavaVersion>
                        <requireMavenVersion>
                           <version>[3.0.3,)</version>
                        </requireMavenVersion>
                     </rules>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>animal-sniffer-maven-plugin</artifactId>
            <version>${version.maven.animal.sniffer}</version>
            <dependencies>
               <dependency>
                  <groupId>org.ow2.asm</groupId>
                  <artifactId>asm-all</artifactId>
                  <version>5.0.3</version>
               </dependency>
            </dependencies>
            <configuration>
               <signature>
                  <groupId>org.codehaus.mojo.signature</groupId>
                  <artifactId>java16</artifactId>
                  <version>1.0</version>
               </signature>
               <ignores>
                  <ignore>sun.misc.Unsafe</ignore>
                  <ignore>sun.reflect.Reflection</ignore>
                  <ignore>org.apache.lucene.store.IOContext</ignore>
               </ignores>
            </configuration>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
               <instructions>
                  <Bundle-DocURL>http://www.infinispan.org/</Bundle-DocURL>
                  <Export-Package>${project.groupId}.*;version=${project.version};-split-package:=error</Export-Package>
                  <_consumer-policy>${bnd.consumer.policy}</_consumer-policy>
                  <_provider-policy>${bnd.provider.policy}</_provider-policy>
               </instructions>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
               <encoding>UTF-8</encoding>
               <compilerArgument>-AtranslationFilesPath=${project.basedir}/target/generated-translation-files</compilerArgument>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
               <execution>
                  <id>build-test-jar</id>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                           <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                     </archive>
                     <excludes>
                        <excludes>**/jbossts-properties.xml</excludes>
                     </excludes>
                  </configuration>
               </execution>
            </executions>
            <configuration>
               <archive>
                  <manifest>
                     <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                     <mainClass>org.infinispan.Version</mainClass>
                  </manifest>
               </archive>
               <excludes>
                  <exclude>**/log4j.xml</exclude>
                  <exclude>**/*.bat</exclude>
                  <exclude>**/*.sh</exclude>
                  <exclude>**/*.txt</exclude>
               </excludes>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
               <encoding>UTF-8</encoding>
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <parallel>tests</parallel>
               <threadCount>${infinispan.test.parallel.threads}</threadCount>
               <forkCount>1</forkCount>
               <reuseForks>true</reuseForks>
               <groups>${defaultTestGroup}</groups>
               <excludedGroups>${defaultExcludedTestGroup}</excludedGroups>
               <systemPropertyVariables>
                  <infinispan.test.jgroups.protocol>${infinispan.test.jgroups.protocol}</infinispan.test.jgroups.protocol>
                  <jgroups.bind_addr>127.0.0.1</jgroups.bind_addr>
                  <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                  <infinispan.unsafe.allow_jdk8_chm>true</infinispan.unsafe.allow_jdk8_chm>
                  <log4j.configuration>${log4j.configuration}</log4j.configuration>
                  <build.directory>${project.build.directory}</build.directory>
                 <!-- this is picked up in the log4j xml which prepends it to each module's log file-->
                 <infinispan.module-name>${project.artifactId}</infinispan.module-name>
               </systemPropertyVariables>
               <trimStackTrace>false</trimStackTrace>
               <properties>
                  <property>
                     <name>listener</name>
                     <value>${testNGListener}</value>
                  </property>
               </properties>
               <!-- -Dsun.nio.ch.bugLevel needed because of http://bugs.sun.com/view_bug.do?bug_id=6427854 -->
               <argLine>${forkJvmArgs} -Dsun.nio.ch.bugLevel</argLine>
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${version.exec.maven.plugin}</version>
            <executions>
               <execution>
                  <id>serialize_component_metadata</id>
                  <phase>process-classes</phase>
                  <goals>
                     <goal>java</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipComponentMetaDataProcessing}</skip>
                     <mainClass>org.infinispan.factories.components.ComponentMetadataPersister</mainClass>
                     <arguments>
                        <argument>${project.build.outputDirectory}</argument>
                        <argument>${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat</argument>
                     </arguments>
                     <systemProperties>
                        <systemProperty>
                           <key>infinispan.isCoreModule</key>
                           <value>${module.metadata.isCoreModule}</value>
                        </systemProperty>
                     </systemProperties>
                  </configuration>
               </execution>
               <execution>
                  <id>serialize_test_component_metadata</id>
                  <phase>process-test-classes</phase>
                  <goals>
                     <goal>java</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipTestComponentMetaDataProcessing}</skip>
                     <mainClass>org.infinispan.factories.components.ComponentMetadataPersister</mainClass>
                     <classpathScope>test</classpathScope>
                     <arguments>
                        <argument>${project.build.testOutputDirectory}</argument>
                        <argument>${basedir}/src/test/resources/${project.artifactId}-tests-component-metadata.dat</argument>
                     </arguments>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy_serialized_metadata</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipComponentMetaDataProcessing}</skip>
                     <target>
                        <copy file="${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat" todir="${project.build.outputDirectory}" />
                     </target>
                  </configuration>
               </execution>
               <execution>
                  <id>copy_serialized_test_metadata</id>
                  <phase>process-test-classes</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipTestComponentMetaDataProcessing}</skip>
                     <target>
                        <copy file="${basedir}/src/test/resources/${project.artifactId}-tests-component-metadata.dat" todir="${project.build.testOutputDirectory}" />
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
   <profiles>
      <profile>
         <id>distribution</id>
         <properties>
            <skipTests>true</skipTests>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>create-classpath</id>
                        <phase>package</phase>
                        <goals>
                           <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                           <includeScope>runtime</includeScope>
                           <excludeScope>test</excludeScope>
                           <prefix>$ISPN_HOME/lib</prefix>
                           <outputFile>${project.build.directory}/${project.artifactId}-runtime-classpath.txt</outputFile>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>extras</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-source-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>attach-sources</id>
                        <goals>
                           <goal>jar</goal>
                           <goal>test-jar</goal>
                        </goals>
                     </execution>
                  </executions>
                  <inherited>true</inherited>
               </plugin>
            </plugins>
         </build>
         <properties>
            
            <packaging>bundle</packaging>
         </properties>
      </profile>
      <profile>
         <id>test-CI</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <properties>
            <defaultTestGroup>functional,unit,arquillian</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-functional</id>
         <properties>
            <defaultTestGroup>functional</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>smoke</id>
         <properties>
            <defaultTestGroup>smoke</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-xsite</id>
         <properties>
            <defaultTestGroup>xsite</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <threadCount>1</threadCount>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>test-unstable</id>
         <properties>
            <defaultTestGroup>unstable</defaultTestGroup>
             <!-- empty since we are not going to exclude any group -->
            <defaultExcludedTestGroup></defaultExcludedTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
       </profile>
      <profile>
         <id>test-unit</id>
         <properties>
            <defaultTestGroup>unit</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-jgroups</id>
         <properties>
            <defaultTestGroup>jgroups</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-transaction</id>
         <properties>
            <defaultTestGroup>transaction</defaultTestGroup>
         </properties>
      </profile>
     <profile>
       <id>debug-tests</id>
       <properties>
         <testNGListener>org.infinispan.test.fwk.DebuggingUnitTestNGListener</testNGListener>
         <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
       </properties>
     </profile>
     <profile>
       <id>fail-all-tests</id>
       <properties>
         <testNGListener>org.infinispan.test.fwk.UnitTestTestNGListener,org.infinispan.test.fwk.FailAllTestNGHook</testNGListener>
         <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
       </properties>
     </profile>
     <profile>
       <id>fail-all-tests-setup</id>
       <properties>
         <testNGListener>org.infinispan.test.fwk.UnitTestTestNGListener,org.infinispan.test.fwk.FailAllSetupTestNGHook</testNGListener>
         <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
       </properties>
     </profile>
     <profile>
       <id>customForkJvmArgs</id>
       <activation>
         <activeByDefault>false</activeByDefault>
         <property>
           <name>env.MAVEN_FORK_OPTS</name>
         </property>
       </activation>
       <properties>
         <forkJvmArgs>${env.MAVEN_FORK_OPTS}</forkJvmArgs>
       </properties>
     </profile>
      <profile>
         <id>nonParallel</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
            <infinispan.test.parallel.threads>1</infinispan.test.parallel.threads>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>traceTests</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <build>
            <plugins>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <systemPropertyVariables>
                        <log4j.configuration>log4j-trace.xml</log4j.configuration>
                     </systemPropertyVariables>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <id>coverage</id>

         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     
                     <execution>
                        <id>jacoco-dependency-ant</id>
                        <goals>
                           <goal>copy</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <inherited>false</inherited>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.ant</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.core</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.report</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>asm</groupId>
                                 <artifactId>asm-all</artifactId>
                                 <version>${version.asm}</version>
                              </artifactItem>
                           </artifactItems>
                           <stripVersion>true</stripVersion>
                           <outputDirectory>${basedir}/target/jacoco-jars</outputDirectory>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>

               
               <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <goals>
                           <goal>prepare-agent</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <propertyName>jacocoAgent</propertyName>
                  </configuration>
               </plugin>

               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <argLine combine.self="override">-Xmx1024m -XX:MaxPermSize=1024m ${jacocoAgent}</argLine>
                     <parallel combine.self="override">tests</parallel>
                     <threadCount combine.self="override">${infinispan.test.parallel.threads}</threadCount>
                     <groups combine.self="override">${defaultTestGroup}</groups>
                     <systemPropertyVariables combine.self="override">
                           <infinispan.test.jgroups.protocol>${infinispan.test.jgroups.protocol}</infinispan.test.jgroups.protocol>
                           <jgroups.bind_addr>127.0.0.1</jgroups.bind_addr>
                           <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                           <infinispan.unsafe.allow_jdk8_chm>true</infinispan.unsafe.allow_jdk8_chm>
                     </systemPropertyVariables>
                     <trimStackTrace combine.self="override">false</trimStackTrace>
                     <properties combine.self="override">
                        <property>
                           <name>listener</name>
                           <value>${testNGListener}</value>
                        </property>
                     </properties>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>jacocoReport</id>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <version>1.7</version>
                  <executions>
                     <execution>
                        <phase>install</phase>
                        <goals>
                           <goal>run</goal>
                        </goals>
                        <configuration combine.self="override">
                           <target>
                              
                              <taskdef classname="org.jacoco.ant.ReportTask" name="report">
                                 <classpath path="${basedir}/target/jacoco-jars/org.jacoco.ant.jar" />
                                 <classpath path="target/jacoco-jars/org.jacoco.core.jar" />
                                 <classpath path="target/jacoco-jars/org.jacoco.report.jar" />
                                 <classpath path="target/jacoco-jars/asm-all.jar" />
                              </taskdef>

                              <echo message="Deleting previous report" />
                              <delete dir="${dir.report}" />

                              <echo message="Creating report directory" />
                              <mkdir dir="${dir.report}" />

                              <echo message="Generating JaCoCo Reports" />
                              <report>
                                 
                                 <executiondata>
                                    <fileset dir="${dir.ispn}" includes="**/target/jacoco.exec" />
                                 </executiondata>

                                 
                                 <structure name="${reportTitle}">
                                    <classfiles>
                                       <fileset dir="${dir.ispn}">
                                          <include name="**/target/classes/" />
                                       </fileset>
                                    </classfiles>
                                    <sourcefiles encoding="UTF-8">
                                       <mappedresources>
                                          <fileset dir="${dir.ispn}" includes="**/src/main/java/**/*.java" />
                                          <mapper from="^(.*/java/)(.*)$" to="\2" type="regexp" />
                                       </mappedresources>
                                    </sourcefiles>

                                 </structure>

                                 
                                 <html destdir="${dir.report}" />
                              </report>
                           </target>
                        </configuration>
                     </execution>
                  </executions>
                  <dependencies>
                     <dependency>
                        <groupId>org.jacoco</groupId>
                        <artifactId>org.jacoco.ant</artifactId>
                        <version>${version.jacoco}</version>
                     </dependency>
                  </dependencies>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>32bitstuff</id>
         <activation>
            <property>
               <name>sun.arch.data.model</name>
               <value>32</value>
            </property>
         </activation>
         <build>
            <pluginManagement>
               <plugins>
                  <plugin>
                     <groupId>org.scala-tools</groupId>
                     <artifactId>maven-scala-plugin</artifactId>
                     <version>${version.maven.scala}</version>
                     <executions>
                        <execution>
                           <id>compile</id>
                           <phase>compile</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <id>test-compile</id>
                           <phase>test-compile</phase>
                           <goals>
                              <goal>testCompile</goal>
                           </goals>
                           <configuration>
                              <args>
                                 <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoctest</arg>
                              </args>
                           </configuration>
                        </execution>
                        <execution>
                           <phase>process-resources</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                     </executions>
                     <configuration>
                        <jvmArgs>
                           <jvmArg>-Xmx256m</jvmArg>
                        </jvmArgs>
                        <args>
                           <arg>-P:genjavadoc:out=${project.parent.build.directory}/genjavadoc</arg>
                        </args>
                        <compilerPlugins>
                           <compilerPlugin>
                              <groupId>com.typesafe.genjavadoc</groupId>
                              <artifactId>genjavadoc-plugin_2.10.2</artifactId>
                              <version>${version.maven.genjavadoc}</version>
                           </compilerPlugin>
                        </compilerPlugins>
                     </configuration>
                  </plugin>
               </plugins>
            </pluginManagement>
         </build>
      </profile>

      <profile>
         <id>64bitstuff</id>
         <activation>
            <property>
               <name>sun.arch.data.model</name>
               <value>64</value>
            </property>
         </activation>
         <build>
            <pluginManagement>
               <plugins>
                  <plugin>
                     <groupId>org.scala-tools</groupId>
                     <artifactId>maven-scala-plugin</artifactId>
                     <version>${version.maven.scala}</version>
                     <executions>
                        <execution>
                           <id>compile</id>
                           <phase>compile</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <id>test-compile</id>
                           <phase>test-compile</phase>
                           <goals>
                              <goal>testCompile</goal>
                           </goals>
                           <configuration>
                              <args>
                                 <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoctest</arg>
                              </args>
                           </configuration>
                        </execution>
                        <execution>
                           <phase>process-resources</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                     </executions>
                     <configuration>
                        <jvmArgs>
                           <jvmArg>-Xmx256m</jvmArg>
                           <jvmArg>-XX:+UseCompressedOops</jvmArg>
                        </jvmArgs>
                        <args>
                           <arg>-P:genjavadoc:out=${project.build.directory}/genjavadoc</arg>
                        </args>
                        <compilerPlugins>
                           <compilerPlugin>
                              <groupId>com.typesafe.genjavadoc</groupId>
                              <artifactId>genjavadoc-plugin_2.10.2</artifactId>
                              <version>${version.maven.genjavadoc}</version>
                           </compilerPlugin>
                        </compilerPlugins>
                     </configuration>
                  </plugin>
               </plugins>
            </pluginManagement>
         </build>
      </profile>
      
      <profile>
         <id>jdk-other-testsuite</id>
         <activation>
             <property><name>env.JAVA_HOME_OTHER</name></property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <jvm>${env.JAVA_HOME_OTHER}/bin/java</jvm>
                     <parallel>tests</parallel>
                     <threadCount>${infinispan.test.parallel.threads}</threadCount>
                     <forkCount>1</forkCount>
                     <reuseForks>true</reuseForks>
                     <groups>${defaultTestGroup}</groups>
                     <excludedGroups>${defaultExcludedTestGroup}</excludedGroups>
                     <systemPropertyVariables>
                        <infinispan.test.jgroups.protocol>${infinispan.test.jgroups.protocol}</infinispan.test.jgroups.protocol>
                        <jgroups.bind_addr>127.0.0.1</jgroups.bind_addr>
                        <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                        <infinispan.unsafe.allow_jdk8_chm>true</infinispan.unsafe.allow_jdk8_chm>
                        <log4j.configuration>${log4j.configuration}</log4j.configuration>
                     </systemPropertyVariables>
                     <trimStackTrace>false</trimStackTrace>
                     <properties>
                        <property>
                           <name>listener</name>
                           <value>${testNGListener}</value>
                        </property>
                     </properties>
                     
                     <argLine>-Xmx1024m -XX:MaxPermSize=256m -Dsun.nio.ch.bugLevel</argLine>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

   </profiles>
</project>
