<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.redhat.ge.jdgdev</groupId>
    <version>1.0</version>
    <artifactId>FootballManager</artifactId>
    <name>FootballManager</name>
    <packaging>war</packaging>
    <properties>
        <!-- Spring -->
        <org.springframework.version>4.2.0.RELEASE</org.springframework.version>

        <!-- logging -->
        <org.slf4j.version>1.7.12</org.slf4j.version>
        <logback.version>1.1.3</logback.version>

        <!-- testing -->
        <org.hamcrest.version>1.3</org.hamcrest.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.10.19</mockito.version>

        <httpcore.version>4.4.1</httpcore.version>
        <httpclient.version>4.5</httpclient.version>

        <rest-assured.version>2.4.1</rest-assured.version>

        <!-- Maven plugins -->
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-war-plugin.version>2.6</maven-war-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <cargo-maven2-plugin.version>1.4.15</cargo-maven2-plugin.version>
<!--      
        <hostname>localhost</hostname>
        <cli.port>9999</cli.port>
 -->        
         
		 <hostname>docker1.ose.opentlc.com</hostname>
         <eap.cli.port>12999</eap.cli.port> 
         <jdg.cli.port>11999</jdg.cli.port> 
        
        <username>admin</username>
        <password>jb0ssredhat!</password>
        <cli.script>jdg_modifyhotrod.cli</cli.script>
        <hotrod.port>11222</hotrod.port>
 
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <version.infinispan>6.3.0.ER3-redhat-1</version.infinispan>

        <version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>
        
        <version.jboss.spec.javaee.6.0>3.0.2.Final-redhat-15</version.jboss.spec.javaee.6.0>
        
        <version.war.plugin>2.1.1</version.war.plugin>

        <maven.compiler.target>1.6</maven.compiler.target>
        
        <maven.compiler.source>1.6</maven.compiler.source>
        
        <exec.plugin.version>1.2.1</exec.plugin.version>

    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-bom</artifactId>
                <version>${version.infinispan}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
            <!-- Import the infinispan core -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Import the Infinispan client hotrod -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <scope>compile</scope>
        </dependency>
        
        <!-- Spring -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- web -->

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.1.1.Final</version>
        </dependency>

        <!-- logging -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <!-- <scope>runtime</scope> -->
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j.version}</version>
            <!-- <scope>runtime</scope> --> <!-- some spring dependencies need to compile against jcl -->
        </dependency>
        <dependency> <!-- needed to bridge to slf4j for projects that use the log4j APIs directly -->
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>

        <!-- test scoped -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit-dep</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${org.hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${org.hamcrest.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
<!-- 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <excludes>
                        <!-- <exclude>**/*ProductionTest.java</exclude> -->
                    </excludes>
                    <systemPropertyVariables>
                        <!-- <provPersistenceTarget>h2</provPersistenceTarget> -->
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.maven.plugin}</version>
                <configuration>
                    <execute-commands>
                        <scripts>
                            <script>src/main/resources/${cli.script}</script>
                        </scripts>
                    </execute-commands>
                    <hostname>${hostname}</hostname>
                    <port>${jdg.cli.port}</port>
                    <username>${username}</username>
                    <password>${password}</password>
                </configuration>
            </plugin>

        </plugins>

    </build>

     <profiles>
        <profile>
            <id>deploy</id>

            <!-- jboss-as-maven-plugin to deploy war -->
            <!-- execution:  mvn jboss-as:execute-commands -s ~/.m2/jdg-offline-settings.xml -P deploy -->
            <build><plugins><plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.maven.plugin}</version>
                <configuration>
                    <execute-commands>
                        <commands>
                            <command>deploy target/${project.name}.war --force</command>
                        </commands>
                    </execute-commands>
                    <hostname>${hostname}</hostname>
                    <port>${eap.cli.port}</port>
                    <username>${username}</username>
                    <password>${password}</password>
                    <timeout>10000</timeout>
                </configuration>
            </plugin></plugins></build>
        </profile>
    </profiles>

</project>